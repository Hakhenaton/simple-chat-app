<!DOCTYPE html>
<html>
    <head>
        <title>Dead simple app</title>
        <meta name="description" content="Une application moderne avec HTMX">
        <meta charset="utf-8">
        <link rel="stylesheet" href="/style.css">
        <link rel="stylesheet" href="/wcs-core/dist/wcs/wcs.css">
        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    </head>
    <body>
        <header hx-get="/navbar" hx-trigger="load, login" hx-swap="outerHTML"></header>
        <main>
            {{$main}}{{/main}}
        </main>
        <div id="modal-zone">
        </div>
        <script src="https://unpkg.com/htmx.org@1.9.8"></script>
        <script type="module">

            import { defineCustomElements } from '/wcs-core/loader/index.js';
            
            defineCustomElements();

            // les éléments <wcs-input> ne sont pas des <input> standards, donc les éléments <form> ne les prennent pas
            // en compte par défaut.
            // on peut customiser le comportement de HTMX pour supporter cela lors de la configuration des requêtes
            // faites avec hx-<method>.
            function bindWcsFormData(htmxConfigRequestEvent){
                const { detail: { target, parameters } } = event
                if (!(target instanceof HTMLFormElement))
                    return
                // wcs-input
                for (const input of target.querySelectorAll('wcs-input')){
                    const name = input.getAttribute('name')
                    if (!name)
                        continue
                    parameters[name] = input.value
                }
            }

            document.body.addEventListener('htmx:configRequest', event => {
                bindWcsFormData(event)
            })

            document.body.addEventListener('login', event => {
                console.log('login', event.target)
            })
        </script>
    </body>
</html>