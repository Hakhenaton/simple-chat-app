{"version":3,"names":["skeletonTextCss","SkeletonText","render","h"],"sources":["./src/components/skeleton-text/skeleton-text.scss?tag=wcs-skeleton-text&encapsulation=shadow","./src/components/skeleton-text/skeleton-text.tsx"],"sourcesContent":["@import \"../skeleton/skeleton.scss\";\n\n:host([height=h1]) {\n    height: 42px;\n}\n\n:host([height=h2]) {\n    height: 36px;\n}\n\n:host([height=h3]) {\n    height: 30px;\n}\n\n:host([height=caption]) {\n    height: 24px;\n}\n\n:host([height=body]) {\n    height: 16px;\n}\n\n","import { Component, ComponentInterface, h, Prop } from \"@stencil/core\";\nimport { WcsSkeletonAnimation } from \"../skeleton/skeleton-interface\";\n\n/**\n * Use a skeleton text as a placeholder for titles or paragraphs.\n */\n@Component({\n    tag: 'wcs-skeleton-text',\n    styleUrl: 'skeleton-text.scss',\n    shadow: true\n})\nexport class SkeletonText implements ComponentInterface {\n\n    /**\n     * Specifies the animation of the skeleton\n     */\n    @Prop({reflect: true}) animation: WcsSkeletonAnimation = 'glide';\n\n    /**\n     * Specifies the line height of the text skeleton\n     */\n    @Prop() height: 'h1' | 'h2' | 'h3' | 'caption' | 'body' = 'body';\n\n    render() {\n        return <span aria-hidden=\"true\"></span>;\n    }\n\n}\n"],"mappings":"2CAAA,MAAMA,EAAkB,suB,MCWXC,EAAY,M,wCAKoC,Q,YAKC,M,CAE1DC,SACI,OAAOC,EAAA,sBAAkB,Q"}