{"version":3,"names":["HorizontalStep","step","checkOnComplete","complete","passed","active","first","disable","onClick","h","class","value","style","backgroundColor","shape","_","mode","disabled","getButtonContent","button","stepButton","size","icon","family","kind","iconName","horizontalStepperCss","HorizontalStepper","componentWillLoad","this","internalCurrentStep","currentStep","steps","length","Error","onCurrentStepChange","newValue","oldValue","undefined","stepInterval","Math","abs","el","setProperty","i","setTimeout","removeProperty","async","navigateToIndex","index","direction","_a","_b","render","Host","map","isComplete","isDisable","wcsHorizontalStepClick","emit","renderLabels","s","text","every","isNextPossibleStep","previousStepIsCompleteAndNotActive"],"sources":["./src/components/horizontal-stepper/horizontal-step.tsx","./src/components/horizontal-stepper/horizontal-stepper.scss?tag=wcs-horizontal-stepper&encapsulation=shadow","./src/components/horizontal-stepper/horizontal-stepper.tsx"],"sourcesContent":["import { FunctionalComponent, h } from '@stencil/core';\nimport { HorizontalStepConfig, StepButton } from './horizontal-stepper-interface';\n\ninterface HorizontalStepProps {\n    step: HorizontalStepConfig;\n    checkOnComplete: boolean;\n    complete: boolean;\n    passed: boolean;\n    active: boolean;\n    first: boolean;\n    disable: boolean;\n    onClick: (step: HorizontalStepConfig) => void;\n}\n\nexport const HorizontalStep: FunctionalComponent<HorizontalStepProps> = (\n    {\n        step,\n        checkOnComplete,\n        complete,\n        passed,\n        active,\n        first,\n        disable,\n        onClick\n    }) => {\n    return (\n        <div class=\"graphic-step\" data-first={first}>\n            {first ? null : (<wcs-progress-bar value={passed ? 100 : 0}></wcs-progress-bar>)}\n            <wcs-button style={{'backgroundColor': 'white'}}\n                        shape=\"round\"\n                        onClick={_ => onClick(step)}\n                        mode={(active || complete) && !step.disable ? 'plain' : 'stroked'}\n                        disabled={disable}>{getButtonContent(step.button, checkOnComplete, complete, active)}</wcs-button>\n        </div>\n    );\n}\n\nconst getButtonContent = (stepButton: StepButton, checkOnComplete: boolean, complete: boolean, active: boolean) => {\n    if (checkOnComplete && complete && !active) {\n        return (<wcs-mat-icon size=\"m\" icon=\"done\" family=\"outlined\"></wcs-mat-icon>);\n    }\n    switch (stepButton.kind) {\n        case 'Icon':\n            return (<wcs-mat-icon size=\"m\" icon={stepButton.iconName}\n                                  family={stepButton.family ? stepButton.family : 'outlined'}></wcs-mat-icon>);\n        case 'Text':\n            return (stepButton.text);\n    }\n}\n\n",":host {\n    display: block;\n\n    .steps {\n        display: flex;\n        flex-direction: row;\n        flex: 1;\n    }\n\n    .graphic-step {\n        display: flex;\n        flex-direction: row;\n        flex: 1;\n        align-items: center;\n    }\n\n    .graphic-step[data-first] {\n        flex: 0;\n    }\n\n    wcs-progress-bar {\n        --wcs-internal-progress-bar-border-radius: 0;\n        flex: 1;\n        margin: 0 -1px;\n    }\n\n    .label-container {\n        justify-content: space-between;\n        display: flex;\n        flex-direction: row;\n        margin-top: var(--wcs-base-margin);\n    }\n\n    .label-container > * {\n        width: 100%;\n        text-align: center;\n        flex: 1;\n        color: var(--wcs-text-medium);\n        font-weight: 500;\n\n    }\n\n    .label-container > *[data-disable] {\n        color: var(--wcs-text-light);\n    }\n\n    .label-container > *[data-current] {\n        color: var(--wcs-primary);\n    }\n\n    .label-container > div[data-first] {\n        margin-left: 20px;\n        text-align: left;\n        flex: 0.5;\n    }\n\n    .label-container > div[data-first] > span {\n        margin-left: -20px;\n    }\n\n    .label-container > div[data-last] {\n        margin-right: 20px;\n        text-align: right;\n        flex: 0.5;\n    }\n\n    .label-container > div[data-last] > span {\n        margin-right: -20px;\n    }\n}\n","import {\n    Component,\n    ComponentInterface,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    Watch\n} from '@stencil/core';\nimport { HorizontalStepClickEvent, HorizontalStepConfig, HorizontalStepperMode } from './horizontal-stepper-interface';\nimport { HorizontalStep } from './horizontal-step';\n\n@Component({\n    tag: 'wcs-horizontal-stepper',\n    styleUrl: 'horizontal-stepper.scss',\n    shadow: true,\n})\nexport class HorizontalStepper implements ComponentInterface {\n    @Element() private el!: HTMLWcsHorizontalStepperElement;\n    /**\n     * index of the active step. The index corresponds to the index of the step in the 'steps' list\n     */\n    @Prop({mutable: true}) currentStep: number = 0;\n    /**\n     * steps to display\n     */\n    @Prop() steps: HorizontalStepConfig[];\n    /**\n     * Specifies if the stepper is in linear mode (the user can only click on the next step)\n     * or non-linear (the user can click on any step)\n     */\n    @Prop() mode: HorizontalStepperMode = 'nonLinear';\n    /**\n     * Specifies whether a check should be displayed when a step is passed.\n     */\n    @Prop() checkOnComplete: boolean;\n    /**\n     * Emits when the user selects a new step.\n     */\n    @Event() wcsHorizontalStepClick!: EventEmitter<HorizontalStepClickEvent>\n    @State() private internalCurrentStep;\n\n    componentWillLoad(): Promise<void> | void {\n        this.internalCurrentStep = this.currentStep;\n        if (this.steps.length < 1) {\n            throw new Error('You must add at least one step');\n        }\n    }\n\n    @Watch('currentStep')\n    // @ts-ignore\n    private onCurrentStepChange(newValue: number, oldValue: number) {\n        //Check if the function is called before the component has finished its initialization in which case we do nothing\n        if (this.internalCurrentStep !== undefined) {\n            const stepInterval = Math.abs(oldValue - newValue);\n            this.el.style.setProperty('--wcs-progress-bar-animation-duration', 375 / stepInterval + 'ms');\n            if (newValue !== oldValue) {\n                for (let i = 0; i < stepInterval; i++) {\n                    setTimeout(() => {\n                        this.internalCurrentStep -= (oldValue - newValue) > 0 ? 1 : -1;\n                        if (i === stepInterval - 1) {\n                            this.el.style.removeProperty('--wcs-progress-bar-animation-duration');\n                        }\n                    }, (i * (375 / stepInterval)));\n                }\n            }\n        }\n    }\n\n    @Method()\n    async previous() {\n        this.navigateToIndex(this.internalCurrentStep - 1, 'backward');\n    }\n\n    @Method()\n    async next() {\n        this.navigateToIndex(this.internalCurrentStep + 1, 'forward');\n    }\n\n    private navigateToIndex(index: number, direction: 'backward' | 'forward'): void {\n        if (index >= 0 && index <= this.steps.length - 1) {\n            if (this.steps[index]?.complete || this.steps[index]?.disable) {\n                this.navigateToIndex(index + (direction === 'forward' ? 1 : -1), direction)\n            } else {\n                this.currentStep = index;\n            }\n        }\n    }\n\n    render(): any {\n        return (\n            <Host>\n                <div class=\"steps\">\n                    {this.steps.map((step, index) =>\n                        (<HorizontalStep step={step}\n                                         passed={index <= this.internalCurrentStep}\n                                         checkOnComplete={this.checkOnComplete}\n                                         complete={this.isComplete(step, index)}\n                                         active={index === this.internalCurrentStep}\n                                         first={index === 0}\n                                         disable={this.isDisable(step, index)}\n                                         onClick={step => this.wcsHorizontalStepClick.emit({step, index})}\n                            />\n                        )\n                    )}\n                </div>\n                {this.renderLabels()}\n            </Host>\n        );\n    }\n\n    private isComplete(step: HorizontalStepConfig, index: number) {\n        return index <= this.internalCurrentStep || step.complete;\n    }\n\n    private renderLabels() {\n        if (this.steps.map(s => s.text).every(s => !s)) {\n            return null;\n        } else {\n            return <div class=\"label-container\">\n                {this.steps.map((step, index) =>\n                    (<div data-first={index === 0} data-current={index === this.internalCurrentStep && !step.disable}\n                          data-disable={this.isDisable(step, index)} data-last={index === this.steps.length - 1}>\n                        <span>{step.text}</span></div>)\n                )}\n            </div>;\n        }\n    }\n\n    private isDisable(step, index) {\n        return step.disable || (this.mode === 'linear' && (!this.isNextPossibleStep(index) && this.internalCurrentStep < index));\n    }\n\n    private isNextPossibleStep(index) {\n        if (index === 0) return true;\n        if (this.steps[index - 1]?.disable || this.previousStepIsCompleteAndNotActive(index)) return this.isNextPossibleStep(index - 1);\n        return this.internalCurrentStep === index - 1;\n    }\n\n    private previousStepIsCompleteAndNotActive(index) {\n        return this.steps[index - 1]?.complete && index - 1 !== this.internalCurrentStep;\n    }\n}\n"],"mappings":"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"}