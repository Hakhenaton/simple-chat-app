import{r as t,c as o,h as s,H as e,g as i}from"./p-a2df3a49.js";const a=":host{display:flex}:host([mode=radio]){flex-direction:column}:host([mode=radio]) ::slotted([slot=option]:first-child){margin-top:0}:host([mode=radio]) ::slotted([slot=option]:last-child){margin-bottom:0}:host([mode=radio]) ::slotted([slot=options]){margin-top:calc(var(--wcs-base-margin) / 2);margin-bottom:calc(var(--wcs-base-margin) / 2)}:host([mode=option]){display:inline-flex;flex-direction:row;padding:calc(var(--wcs-base-margin) / 4);background-color:#4d4f53;border-radius:0.6875rem}:host([mode=horizontal]){justify-content:space-between}";const n=class{constructor(s){t(this,s);this.wcsChange=o(this,"wcsChange",7);this.value=undefined;this.name=undefined;this.mode="radio"}onValueChangeHandler(t){this.updateOptionsState(t,true)}componentDidLoad(){if(this.value){this.updateOptionsState(this.value,true)}if(this.mode==="option"||this.mode==="horizontal"){for(const t of this.options){t.mode=this.mode}}}get options(){const t=this.el.querySelectorAll("wcs-radio");const o=this.el.querySelector("slot");return t.length!==0?t:o!==null?o.assignedElements():[]}selectedOptionChanged(t){this.updateOptionsState(t.detail.value,false);this.wcsChange.emit({value:t.detail.value})}updateOptionsState(t,o){for(const s of this.options){if(s.value!==t){s.removeAttribute("checked")}else{if(o){s.setAttribute("checked","")}}}}render(){return s(e,null,s("slot",{name:"option"}))}get el(){return i(this)}static get watchers(){return{value:["onValueChangeHandler"]}}};n.style=a;export{n as wcs_radio_group};
//# sourceMappingURL=p-069555a1.entry.js.map