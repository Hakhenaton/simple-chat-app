{"version":3,"names":["Accordion","this","accordionPanels","componentWillLoad","getAllAccordionPanelsFromHostElement","updateHideActiontextOnPanel","updateHighlightOnPanel","updateGroupContentWithHeader","wcsOpenChangeHandler","event","detail","closeAllAccordionsExcept","target","forEach","opt","hideActionText","highlight","groupContentWithHeader","render","h","Host","Array","from","el","children","filter","tagName","eventTarget","a","close"],"sources":["./src/components/accordion/accordion.tsx"],"sourcesContent":["import { Component, Element, h, Host, Listen, Prop, Watch } from '@stencil/core';\n\n@Component({\n    tag: 'wcs-accordion',\n    // styleUrl: 'accordion.scss',\n    shadow: true\n})\nexport class Accordion {\n    @Element() private el!: HTMLWcsAccordionElement;\n    private accordionPanels: HTMLWcsAccordionPanelElement[] = [];\n\n    /**\n     * Specifies whether accordion-panel components should display the open/close text.\n     * if false, it won't show the open/close text in all accordion-panel.\n     */\n    @Prop({reflect: true}) hideActionText: boolean = false;\n\n    /**\n     * Specifies whether accordion-panel components should highlight when open with primary color.\n     * if true, the background color of the accordion-panel will be the primary color.\n     * if false, the background color of the accordion-panel will be wcs-light.\n     */\n    @Prop({reflect: true}) highlight: boolean = false;\n\n    /**\n     * Specifies wether accordion-panel components should group the content with header in one card\n     * if true, there will be only one card with the header and the content\n     * Nothing change when the panel is close\n     */\n    @Prop({reflect: true}) groupContentWithHeader: boolean = false;\n\n    componentWillLoad(): Promise<void> | void {\n        this.accordionPanels = this.getAllAccordionPanelsFromHostElement();\n\n        this.updateHideActiontextOnPanel();\n        this.updateHighlightOnPanel();\n        this.updateGroupContentWithHeader();\n    }\n\n    @Listen('wcsOpenChange')\n    wcsOpenChangeHandler(event: CustomEvent<boolean>) {\n        if (event.detail) {\n            this.closeAllAccordionsExcept(event.target);\n        }\n    }\n\n    @Watch('hideActionText')\n    private updateHideActiontextOnPanel() {\n        this.accordionPanels.forEach((opt: HTMLWcsAccordionPanelElement) => {\n            opt.hideActionText = this.hideActionText;\n        })\n    }\n\n    @Watch('highlight')\n    private updateHighlightOnPanel() {\n        this.accordionPanels.forEach((opt: HTMLWcsAccordionPanelElement) => {\n            opt.highlight = this.highlight;\n        })\n    }\n    @Watch('groupContentWithHeader')\n    private updateGroupContentWithHeader() {\n        this.accordionPanels.forEach((opt: HTMLWcsAccordionPanelElement) => {\n            opt.groupContentWithHeader = this.groupContentWithHeader;\n        })\n    }\n\n\n    render() {\n        return (\n            <Host>\n                <slot/>\n            </Host>\n        );\n    }\n\n    private getAllAccordionPanelsFromHostElement(): HTMLWcsAccordionPanelElement[] {\n        return Array.from(this.el.children)\n            .filter(el => el.tagName === 'WCS-ACCORDION-PANEL') as HTMLWcsAccordionPanelElement[];\n    }\n\n    /**\n     * Close all accordion panels except the one that match the eventTarget reference\n     */\n    private closeAllAccordionsExcept(eventTarget: EventTarget): void {\n        this.accordionPanels.filter(a => a !== eventTarget).forEach(a => a.close());\n    }\n}\n"],"mappings":"+DAOaA,EAAS,M,yBAEVC,KAAAC,gBAAkD,G,oBAMT,M,eAOL,M,4BAOa,K,CAEzDC,oBACIF,KAAKC,gBAAkBD,KAAKG,uCAE5BH,KAAKI,8BACLJ,KAAKK,yBACLL,KAAKM,8B,CAITC,qBAAqBC,GACjB,GAAIA,EAAMC,OAAQ,CACdT,KAAKU,yBAAyBF,EAAMG,O,EAKpCP,8BACJJ,KAAKC,gBAAgBW,SAASC,IAC1BA,EAAIC,eAAiBd,KAAKc,cAAc,G,CAKxCT,yBACJL,KAAKC,gBAAgBW,SAASC,IAC1BA,EAAIE,UAAYf,KAAKe,SAAS,G,CAI9BT,+BACJN,KAAKC,gBAAgBW,SAASC,IAC1BA,EAAIG,uBAAyBhB,KAAKgB,sBAAsB,G,CAKhEC,SACI,OACIC,EAACC,EAAI,KACDD,EAAA,a,CAKJf,uCACJ,OAAOiB,MAAMC,KAAKrB,KAAKsB,GAAGC,UACrBC,QAAOF,GAAMA,EAAGG,UAAY,uB,CAM7Bf,yBAAyBgB,GAC7B1B,KAAKC,gBAAgBuB,QAAOG,GAAKA,IAAMD,IAAad,SAAQe,GAAKA,EAAEC,S"}