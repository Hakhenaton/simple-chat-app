{"version":3,"names":["patchBrowser","importMeta","import","meta","url","opts","resourcesUrl","URL","href","promiseResolve","then","options","bootstrapLazy","type","label","readonly","value","validateFn","formatFn","errorMsg","size","currentState","isError","currentStep","steps","mode","checkOnComplete","internalCurrentStep","previous","next","min","max","step","displayedValue","serverMode","data","loading","selectionConfig","selectedItems","wcsGridPaginationId","rowIdPath","columns","paginationEl","rows","availablePageSizes","currentPage","pageSize","itemsCount","pageCount","withoutBackdrop","show","showCloseButton","hideActions","noArrow","shape","disabled","placement","expanded","text","showPopoverMenu","fireFocusEvents","accept","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","clearOnEdit","debounce","prefixLabel","suffixLabel","enterkeyhint","icon","inputmode","maxlength","minlength","multiple","name","pattern","placeholder","required","spellcheck","state","hasFocus","passwordReveal","setFocus","setBlur","getInputElement","cols","wrap","autoGrow","resize","fitContent","hideActionText","highlight","groupContentWithHeader","open","close","gutter","hasTabs","color","appName","mobileMenuOpen","currentActiveSizing","categoryOpen","panelTitle","panelDescription","menuOpen","path","sort","sortFn","formatter","sortOrder","width","customCells","hidden","columnId","rowId","small","activated","showLabel","animation","radius","rounded","height","checked","labelAlignment","header","itemKey","align","selectedIndex","selectedKey","headersOnly","headers","currentActiveTabIndex","for","position","interactive","maxWidth","delay","duration","trigger","theme","content","appendTo","hide","disable","enable","selected","chipColor","chipBackgroundColor","chips","compareWith","hasLoaded","displayText","focused","overlayDirection","hasPrefix","hasSuffix","spiedElement","indeterminate","target","ripple","family"],"sources":["./node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"sourcesContent":["/*\n Stencil Client Patch Browser v3.0.0 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, plt, win, doc, promiseResolve, H } from '@stencil/core';\n/**\n * Helper method for querying a `meta` tag that contains a nonce value\n * out of a DOM's head.\n *\n * @param doc The DOM containing the `head` to query against\n * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag\n * exists or the tag has no content.\n */\nfunction queryNonceMetaTagContent(doc) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;\n}\n// TODO(STENCIL-661): Remove code related to the dynamic import shim\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    // TODO(STENCIL-659): Remove code implementing the CSS variable shim\n    if (BUILD.cssVarShim) {\n        // shim css vars\n        // TODO(STENCIL-659): Remove code implementing the CSS variable shim\n        plt.$cssShim$ = win.__cssshim;\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        // because the mark/measure APIs are designed to write entries to a buffer in the browser that does not exist,\n        // simply stub the implementations out.\n        // TODO(STENCIL-323): Remove this patch when support for older browsers is removed (breaking)\n        // @ts-ignore\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = \n    // TODO(STENCIL-661): Remove code related to the dynamic import shim\n    // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    BUILD.scriptDataOpts || BUILD.safari10 || BUILD.dynamicImportShim\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? scriptElm['data-opts'] || {} : {};\n    // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    if (BUILD.safari10 && 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    if (!BUILD.safari10 && importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n        // TODO(STENCIL-661): Remove code related to the dynamic import shim\n        // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    }\n    else if (BUILD.dynamicImportShim || BUILD.safari10) {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        // TODO(STENCIL-661): Remove code related to the dynamic import shim\n        if (BUILD.dynamicImportShim) {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        // TODO(STENCIL-661): Remove code related to the dynamic import shim\n        if (BUILD.dynamicImportShim && !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\n// TODO(STENCIL-661): Remove code related to the dynamic import shim\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            var _a;\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n                    type: 'application/javascript',\n                }));\n                // Apply CSP nonce to the script tag if it exists\n                const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n                if (nonce != null) {\n                    script.setAttribute('nonce', nonce);\n                }\n                mod = new Promise((resolve) => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","export { setNonce } from '@stencil/core';\nimport { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"],"mappings":"sFAmBA,MAAMA,EAAe,KAkCjB,MAAMC,EAAaC,OAAOC,KAAKC,IAC/B,MAAMC,EAA6D,GAiBnE,GAAuBJ,IAAe,GAAI,CACtCI,EAAKC,aAAe,IAAIC,IAAI,IAAKN,GAAYO,IAGrD,CAcI,OAAOC,EAAeJ,EAAK,ECrF/BL,IAAeU,MAAKC,GAEXC,EAAc,wCAAuC,CAAAC,KAAA,IAAAC,MAAA,IAAAC,SAAA,IAAAC,MAAA,OAAAC,WAAA,KAAAC,SAAA,KAAAC,SAAA,gBAAAC,KAAA,MAAAC,aAAA,KAAAC,QAAA,wFAAAC,YAAA,sBAAAC,MAAA,KAAAC,KAAA,IAAAC,gBAAA,wBAAAC,oBAAA,KAAAC,SAAA,KAAAC,KAAA,0CAAAT,KAAA,MAAAN,MAAA,IAAAgB,IAAA,OAAAC,IAAA,OAAAC,KAAA,OAAAhB,MAAA,OAAAiB,eAAA,uCAAAC,WAAA,kBAAAC,KAAA,KAAAC,QAAA,IAAAC,gBAAA,uBAAAC,cAAA,qBAAAC,oBAAA,6BAAAC,UAAA,kBAAAC,QAAA,KAAAC,aAAA,KAAAC,KAAA,+QAAAC,mBAAA,KAAAC,YAAA,mBAAAC,SAAA,gBAAAC,WAAA,kBAAAC,UAAA,oDAAAC,gBAAA,yBAAAC,KAAA,MAAAC,gBAAA,0BAAA/B,KAAA,IAAAgC,YAAA,uFAAAC,QAAA,eAAA5B,KAAA,IAAA6B,MAAA,IAAAC,SAAA,IAAAC,UAAA,IAAAC,SAAA,4JAAAC,KAAA,IAAAC,gBAAA,4EAAAC,gBAAA,wBAAAC,OAAA,IAAAC,eAAA,IAAAC,aAAA,IAAAC,YAAA,IAAAC,UAAA,IAAAC,WAAA,kBAAAC,YAAA,oBAAAC,SAAA,IAAAC,YAAA,mBAAAC,YAAA,mBAAAf,SAAA,IAAAgB,aAAA,IAAAnD,KAAA,MAAAoD,KAAA,IAAAC,UAAA,IAAA1C,IAAA,IAAA2C,UAAA,IAAA5C,IAAA,IAAA6C,UAAA,IAAAC,SAAA,IAAAC,KAAA,IAAAC,QAAA,IAAAC,YAAA,IAAAhE,SAAA,IAAAiE,SAAA,IAAAC,WAAA,IAAAC,MAAA,MAAAlD,KAAA,IAAAnB,KAAA,IAAAG,MAAA,OAAAmE,SAAA,KAAAC,eAAA,KAAAC,SAAA,KAAAC,QAAA,KAAAC,gBAAA,2CAAA3B,gBAAA,wBAAAE,eAAA,IAAAG,UAAA,IAAAE,YAAA,uBAAAC,SAAA,IAAAb,SAAA,IAAAiB,KAAA,IAAAC,UAAA,IAAAF,aAAA,IAAAG,UAAA,IAAAC,UAAA,IAAAE,KAAA,IAAAE,YAAA,IAAAhE,SAAA,IAAAiE,SAAA,IAAAC,WAAA,IAAAC,MAAA,MAAAM,KAAA,IAAA7C,KAAA,IAAA8C,KAAA,IAAAC,SAAA,gBAAA1E,MAAA,OAAA2E,OAAA,MAAAR,SAAA,KAAAS,WAAA,KAAAP,SAAA,KAAAC,QAAA,KAAAC,gBAAA,4CAAAM,eAAA,yBAAAC,UAAA,MAAAC,uBAAA,qNAAAC,KAAA,OAAAH,eAAA,yBAAAC,UAAA,MAAAC,uBAAA,kCAAAE,MAAA,6CAAAC,OAAA,IAAAC,QAAA,uEAAA7C,MAAA,IAAA8C,MAAA,sCAAA3E,KAAA,iFAAA4E,QAAA,eAAAC,eAAA,KAAAC,oBAAA,uMAAAzF,MAAA,IAAA0F,aAAA,KAAAP,MAAA,KAAAD,KAAA,+HAAAlF,MAAA,IAAA2F,WAAA,kBAAAC,iBAAA,wBAAAC,SAAA,KAAAV,MAAA,KAAAD,KAAA,ykBAAAtC,KAAA,IAAAR,KAAA,8CAAA0D,KAAA,IAAA/B,KAAA,IAAAgC,KAAA,IAAAC,OAAA,KAAAC,UAAA,KAAAC,UAAA,oBAAAC,MAAA,IAAAC,YAAA,mBAAAC,OAAA,kDAAAC,SAAA,gBAAAC,MAAA,iFAAAC,MAAA,yCAAA9C,KAAA,IAAApD,KAAA,uCAAA4D,SAAA,6CAAAuC,UAAA,gJAAAnG,KAAA,MAAAqC,SAAA,KAAAF,SAAA,0EAAAG,KAAA,MAAAlD,KAAA,+EAAAY,KAAA,IAAAoG,UAAA,iBAAAxG,MAAA,6CAAAA,MAAA,IAAA6D,KAAA,MAAApD,KAAA,iGAAAgG,UAAA,MAAAC,OAAA,sDAAAD,UAAA,MAAAE,QAAA,MAAAC,OAAA,MAAAX,MAAA,iDAAAQ,UAAA,MAAAG,OAAA,wCAAA/C,KAAA,IAAAgD,QAAA,MAAAC,eAAA,wBAAAvE,SAAA,qCAAAwE,OAAA,MAAAC,QAAA,iDAAAC,MAAA,MAAAC,cAAA,qBAAAC,YAAA,mBAAAC,YAAA,mBAAAlC,OAAA,IAAAmC,QAAA,KAAAC,sBAAA,0EAAAC,IAAA,IAAAC,SAAA,MAAAC,YAAA,IAAAC,SAAA,gBAAAC,MAAA,IAAAC,SAAA,IAAAC,QAAA,IAAAC,MAAA,IAAAC,QAAA,IAAAC,SAAA,gBAAAC,KAAA,KAAA/F,KAAA,KAAAgG,QAAA,KAAAC,OAAA,+CAAA7B,MAAA,IAAAE,UAAA,iBAAAxG,MAAA,uCAAAS,KAAA,MAAAT,MAAA,OAAAF,MAAA,OAAA+G,QAAA,OAAAtE,SAAA,8EAAAA,SAAA,OAAA6F,SAAA,OAAApI,MAAA,IAAAqI,UAAA,iBAAAC,oBAAA,4BAAA1E,SAAA,wFAAAxD,KAAA,MAAAJ,MAAA,OAAA+D,YAAA,OAAAxB,SAAA,OAAAqB,SAAA,MAAA2E,MAAA,MAAA1E,KAAA,IAAA2E,YAAA,KAAA/F,SAAA,KAAAgG,UAAA,KAAAC,YAAA,KAAAC,QAAA,KAAAC,iBAAA,KAAA5D,KAAA,KAAAC,MAAA,2MAAA3E,QAAA,kBAAAuI,UAAA,KAAAC,UAAA,KAAAC,aAAA,2CAAAlF,KAAA,IAAAmF,cAAA,OAAAnC,QAAA,OAAAC,eAAA,yBAAAvE,SAAA,yCAAA1C,KAAA,OAAAL,KAAA,IAAAyJ,OAAA,IAAA1G,SAAA,MAAA2G,OAAA,IAAA9I,KAAA,MAAAkC,MAAA,MAAA7B,KAAA,MAAAW,QAAA,qEAAAoC,KAAA,IAAApD,KAAA,IAAA+I,OAAA,yCAAA1I,KAAA,WAAAd"}