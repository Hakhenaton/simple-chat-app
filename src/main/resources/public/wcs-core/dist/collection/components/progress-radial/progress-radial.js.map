{"version":3,"file":"progress-radial.js","sourceRoot":"","sources":["../../../src/components/progress-radial/progress-radial.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAsB,CAAC,EAAE,MAAM,eAAe,CAAC;AAOvE,MAAM,OAAO,cAAc;;gBACA,GAAG;qBACG,KAAK;iBACV,CAAC;;EAEzB,MAAM;IACF,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC;IACxE,OAAO,CACH,WAAK,KAAK,EAAE,iBAAiB,oBAAiB,iBAAiB;MAC3D,WAAK,KAAK,EAAE,wBAAwB,eACrB,QAAQ,EACnB,KAAK,EAAG,IAAI,CAAC,IAAI,EACjB,MAAM,EAAG,IAAI,CAAC,IAAI,EAClB,OAAO,EAAG,OAAO,IAAI,IAAI,IAAI,EAAE,EAC/B,KAAK,EAAG,IAAI,CAAC,WAAW,EAAE;QAE1B,cAAQ,KAAK,EAAE,uBAAuB,EAAC,EAAE,EAAG,QAAQ,EAAE,EAAE,EAAG,QAAQ,EAAE,CAAC,EAAE,IAAI,kBAAe,IAAI,GAAG;QAClG,cAAQ,KAAK,EAAE,uBAAuB,EAAC,EAAE,EAAG,QAAQ,EAAE,EAAE,EAAG,QAAQ,EAAE,CAAC,EAAE,IAAI,kBAAe,IAAI,GAAG,CAChG;MACL,IAAI,CAAC,SAAS;QACX,WAAK,KAAK,EAAE,uBAAuB,eAAY,OAAO;UAAC;YAAM,yBAAiB,YAAY,IAAE,IAAI,CAAC,KAAK,CAAQ;YAAA,mBAAY,CAAO,CAAM;MAE3I,0BAAkB,SAAS,EAAC,KAAK,EAAE,SAAS,EAAC,IAAI,EAAE,OAAO,EAAC,KAAK,EAAG,IAAI,CAAC,KAAK,GAAI,CAC/E,CACT,CAAC;EACN,CAAC;EAED,WAAW;IACP,OAAO;MACH,kBAAkB,EAAE,SAAS;MAC7B,mBAAmB,EAAE,GAAG,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,OAAO,EAAE;KACnE,CAAC;EACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, Prop, ComponentInterface, h } from '@stencil/core';\n\n@Component({\n    tag: 'wcs-progress-radial',\n    styleUrl: 'progress-radial.scss',\n    shadow: true\n})\nexport class ProgressRadial implements ComponentInterface {\n    @Prop() size: number = 120;\n    @Prop() showLabel: boolean = false;\n    @Prop() value: number = 0;\n\n    render() {\n        const { size, halfSize } = { size: this.size, halfSize: this.size / 2 };\n        return (\n            <div class= \"progress-circle\" data-component= \"radial-progress\">\n                <svg class= \"progress-circle-figure\"\n                    data-role= \"figure\"\n                    width= {this.size}\n                    height= {this.size}\n                    viewBox= {`0 0 ${size} ${size}`}\n                    style= {this.getSvgStyle()}\n                >\n                    <circle class= \"progress-circle-meter\" cx= {halfSize} cy= {halfSize} r= \"54\" stroke-width= \"12\" />\n                    <circle class= \"progress-circle-value\" cx= {halfSize} cy= {halfSize} r= \"54\" stroke-width= \"12\" />\n                </svg>\n                {this.showLabel &&\n                    <div class= \"progress-circle-label\" data-role= \"label\"><span><span data-role= \"labelvalue\">{this.value}</span><sup>%</sup></span></div>\n                }\n                <input data-role= \"control\" class= \"sr-only\" type= \"range\" value= {this.value} />\n            </div>\n        );\n    }\n\n    getSvgStyle() {\n        return {\n            'stroke-dasharray': '339.292',\n            'stroke-dashoffset': `${339.292 - (this.value / 100) * 339.292}`\n        };\n    }\n}\n"]}