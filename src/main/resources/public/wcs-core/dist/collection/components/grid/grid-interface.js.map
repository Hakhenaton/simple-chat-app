{"version":3,"file":"grid-interface.js","sourceRoot":"","sources":["../../../src/components/grid/grid-interface.ts"],"names":[],"mappings":"AAmCA,MAAM,UAAU,mBAAmB,CAAC,SAAuB;EACvD,QAAQ,SAAS,EAAE;IACf,KAAK,KAAK;MACN,OAAO,CAAC,CAAC;IACb,KAAK,MAAM;MACP,OAAO,CAAC,CAAC,CAAC;IACd,KAAK,MAAM;MACP,MAAM;GACb;AACL,CAAC","sourcesContent":["import { VNode } from '@stencil/core';\n\nexport type WcsGridSelectionConfig = 'none' | 'single' | 'multiple';\n\nexport type WcsSortFn = (a: any, b: any, column: HTMLWcsGridColumnElement) => -1 | 0 | 1;\n\nexport type WcsCellFormatter = (_h: HyperFunc<VNode>, column: HTMLWcsGridColumnElement, rowData: WcsGridRowData) => HTMLElement | HTMLElement[];\n\nexport interface WcsGridColumnSortChangeEventDetails {\n    sortFn: WcsSortFn;\n    order: WcsSortOrder;\n    column: HTMLWcsGridColumnElement;\n}\n\nexport interface WcsGridRowSelectedEventDetails {\n    row: WcsGridRowData;\n}\n\nexport interface WcsGridAllRowSelectedEventDetails {\n    rows: WcsGridRowData[];\n}\n\nexport type WcsGridPaginationConfig = {\n    currentPage: number;\n    pageSize: number;\n    itemsCount: number;\n    pageCount: number;\n};\n\nexport interface WcsGridPaginationChangeEventDetails {\n    pagination: WcsGridPaginationConfig;\n}\n\nexport type WcsSortOrder = 'asc' | 'desc' | 'none';\n\nexport function getSortOrderInteger(sortOrder: WcsSortOrder) {\n    switch (sortOrder) {\n        case 'asc':\n            return 1;\n        case 'desc':\n            return -1;\n        case 'none':\n            break;\n    }\n}\n\nexport interface WcsGridRow {\n    uuid: string;\n    page?: number;\n    selected?: boolean;\n    data?: any;\n    cells?: WcsGridCell[];\n}\n\nexport interface WcsGridCell {\n    content: string | void;\n    column: HTMLWcsGridColumnElement;\n    formatter: (_h: HyperFunc<VNode>, column: HTMLWcsGridColumnElement, rowData: WcsGridRowData) => HTMLElement | HTMLElement[];\n}\n\nexport interface WcsGridRowData {\n    page: number;\n    selected: boolean;\n    data: any;\n}\n\nexport interface HyperFunc<T> {\n    (tag: any): T;\n}\n\nexport interface HyperFunc<T> {\n    (tag: any, data: any): T;\n}\n\nexport interface HyperFunc<T> {\n    (tag: any, text: string): T;\n}\n\nexport interface HyperFunc<T> {\n    (sel: any, children: (T | undefined | null)[]): T;\n}\n\nexport interface HyperFunc<T> {\n    (sel: any, data: any, text: string): T;\n}\n\nexport interface HyperFunc<T> {\n    (sel: any, data: any, children: (T | undefined | null)[]): T;\n}\n\nexport interface HyperFunc<T> {\n    (sel: any, data: any, children: T): T;\n}\n"]}