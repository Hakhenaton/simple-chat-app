{"file":"wcs-com-nav-submenu.entry.cjs.js","mappings":"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","names":["registerCloseHandlerForFocusOutEventOn","isEscapeKey","isSpaceKey","isEnterKey","h","Host"],"sources":["./src/components/com-nav-submenu/com-nav-submenu.scss?tag=wcs-com-nav-submenu&encapsulation=shadow","./src/components/com-nav-submenu/com-nav-submenu.tsx"],"sourcesContent":["@import '../../style/focus-outline.scss';\n\n:host {\n    display: block;\n    padding-bottom: var(--wcs-padding);\n\n    .menu-button {\n        display: block;\n        font-weight: 500;\n        padding-left: calc(3 * var(--wcs-base-margin));\n    }\n\n    .arrow-icon {\n        display: none;\n    }\n\n    .arrow-container {\n        display: none;\n    }\n\n    .label {\n        text-transform: uppercase;\n        font-size: 16px;\n        cursor: unset;\n        font-weight: 500;\n        color: var(--wcs-gray);\n        text-decoration: none;\n    }\n\n    .drawer {\n        display: contents;\n    }\n\n    .drawer-container {\n        display: contents;\n    }\n    .drawer-description {\n        display: none;\n    }\n    .menu-items {\n        ::slotted(a):after {\n            font-family: icons;\n            padding-left: var(--wcs-base-margin);\n            font-size: 0.6rem;\n            content: \"\\f107\";\n            line-height: 1;\n            box-sizing: border-box;\n        }\n\n        ::slotted(a) {\n            user-select: none;\n            cursor: pointer;\n            text-decoration: none;\n            font-size: 16px;\n            color: var(--wcs-gray);\n            font-weight: 500;\n            display: block;\n            padding-top: calc(1.5 * var(--wcs-base-margin));\n            padding-bottom: calc(1.5 * var(--wcs-base-margin));\n            padding-left: calc(6 * var(--wcs-base-margin));\n        }\n\n        /**For mobile*/\n        ::slotted(a:focus-visible){\n            @include focus-outline(var(--wcs-primary), 2px, 0.1rem);\n        }\n\n        @supports not selector(::slotted(a:focus-visible)) {\n            ::slotted(a:focus-within) {\n                @include focus-outline(var(--wcs-primary), 2px, 0.1rem);\n            }\n        }\n    }\n}\n\n@media screen and (min-width: 576px) {\n    :host {\n        height: 100%;\n        padding-bottom: unset;\n\n        .menu-button {\n            display: flex;\n            align-items: center;\n            height: 100%;\n            cursor: pointer;\n            user-select: none;\n            font-weight: unset;\n            padding-left: unset;\n        }\n\n        .menu-button:focus-visible {\n            @include focus-outline(var(--wcs-primary), 2px, 0.1rem);\n        }\n\n        @supports not selector(.menu-button:focus-visible) {\n            @include focus-outline(var(--wcs-primary), 2px, 0.1rem);\n        }\n\n        .label {\n            text-transform: unset;\n            cursor: pointer;\n        }\n\n        .arrow-icon {\n            display: inline-block;\n            font-family: icons;\n            font-size: 0.6rem;\n            line-height: 1;\n            box-sizing: border-box;\n        }\n\n        .arrow-container {\n            display: unset;\n            margin-left: var(--wcs-base-margin);\n        }\n\n        .arrow-icon:not([data-open]) {\n            transform: rotate(90deg);\n        }\n\n        .arrow-icon[data-open] {\n            transform: rotate(-90deg);\n        }\n\n        .drawer {\n            display: none;\n            position: absolute;\n            top: 75px;\n            z-index: 8888;\n            left: 0;\n            width: 100%;\n            box-sizing: border-box;\n            padding: 50px;\n            background-color: var(--wcs-primary);\n            color: var(--wcs-white);\n        }\n\n        .drawer-content {\n            display: flex;\n            justify-content: space-between;\n            max-width: 62.5%;\n            flex: 1;\n\n            div:first-child {\n                flex: 0.8;\n            }\n\n            div {\n                max-width: 260px;\n            }\n        }\n\n        .menu-items {\n            padding: 0 80px 0 50px;\n            display: flex;\n            flex-direction: column;\n            align-items: flex-end;\n\n            ::slotted(*:not(:first-child)) {\n                margin-top: 24px;\n            }\n\n            ::slotted(a) {\n                color: var(--wcs-white);\n                font-weight: 400;\n                display: unset;\n                padding-top: unset;\n                padding-bottom: unset;\n                padding-left: unset;\n            }\n\n            ::slotted(a:focus-visible){\n                @include focus-outline(var(--wcs-white), 2px, 0.1rem);\n            }\n\n            @supports not selector(::slotted(a:focus-visible)) {\n                ::slotted(a:focus-within) {\n                    @include focus-outline(var(--wcs-white), 2px, 0.1rem);\n                }\n            }\n        }\n\n        .drawer-container {\n            display: flex;\n            max-width: var(--wcs-com-content-max-width);\n            margin: 0 auto;\n\n            h3 {\n                margin: 0 0 24px 0;\n                font-size: 1.5rem;\n                line-height: 1.25;\n                font-weight: 400;\n            }\n\n            p {\n                margin-top: 0;\n                margin-bottom: 1rem;\n                font-weight: 500;\n                font-size: 1rem;\n                line-height: 1.375;\n            }\n        }\n\n        .drawer[data-open] {\n            display: block;\n        }\n        .drawer-description {\n            display: block;\n        }\n    }\n}\n","import {\n    Component,\n    ComponentInterface,\n    h,\n    Host,\n    Listen,\n    Prop,\n    State,\n    Element,\n    Event,\n    EventEmitter, Method\n} from '@stencil/core';\nimport {MenuOpenedEventDetail} from '../com-nav/com-nav-interface';\nimport {isEnterKey, isEscapeKey, isSpaceKey} from \"../../utils/helpers\";\nimport {registerCloseHandlerForFocusOutEventOn} from \"../com-nav/com-nav-utils\";\n\n\nconst WCS_COM_NAV_CATEGORY = 'WCS-COM-NAV-CATEGORY';\n\n@Component({\n    tag: 'wcs-com-nav-submenu',\n    styleUrl: 'com-nav-submenu.scss',\n    shadow: true,\n})\nexport class ComNavSubmenu implements ComponentInterface {\n    @Element() private el!: HTMLWcsComNavSubmenuElement;\n    @Prop() label: string;\n    @Prop() panelTitle: string;\n    @Prop() panelDescription: string;\n    @State() private menuOpen: boolean = false;\n    @Event() wcsSubmenuOpened: EventEmitter<MenuOpenedEventDetail>;\n    /**\n     * Emitted when a user click on a final navigation action.\n     *\n     * Used by the com-nav component to close the mobile menu overlay when a user click on a final action.\n     */\n    @Event() wcsClickOnFinalAction: EventEmitter<void>;\n\n    componentWillLoad(): Promise<void> | void {\n        const slottedCategoryItems = this.el.querySelectorAll(':scope > wcs-com-nav-category:not([slot])');\n        registerCloseHandlerForFocusOutEventOn<HTMLWcsComNavCategoryElement>(slottedCategoryItems, WCS_COM_NAV_CATEGORY);\n    }\n\n    /**\n     * If the user clicks outside the menu, we close it\n     */\n    @Listen('click', {target: 'window'})\n    onWindowClickEvent(_: MouseEvent) {\n        if (this.menuOpen) this.menuOpen = false;\n    }\n\n    @Listen('wcsSubmenuOpened', {target: 'window'})\n    onSubmenuOpened(event: CustomEvent<MenuOpenedEventDetail>) {\n        // If the clicked menu is not this component, we close it\n        if (event.detail.menuElement !== this.el) {\n            this.menuOpen = false;\n        }\n    }\n\n    /**\n     * Close the menu when escape is pressed\n     * @param _event keydown event\n     */\n    @Listen('keydown', {target: 'window'})\n    onEscapeKeyDown(_event: KeyboardEvent) {\n        if (isEscapeKey(_event) && this.menuOpen) {\n            this.menuOpen = false;\n        }\n    }\n\n    /**\n     * Close the menu\n     */\n    @Method()\n    async close() {\n        this.menuOpen = false;\n    }\n\n    /**\n     * Opens the menu\n     */\n    @Method()\n    async open() {\n        this.menuOpen = true;\n    }\n\n    /**\n     * When the user clicks on the menu, we do not propagate the native event and we launch a custom event to manage\n     * the closing of the menu correctly\n     */\n    private onClick(evt: MouseEvent) {\n        evt.stopPropagation();\n        this.wcsSubmenuOpened.emit({menuElement: this.el})\n    }\n\n    /**\n     * Handle key down on menu items\n     * @param _event the keyboard event\n     * @private\n     */\n    private handleMenuItemsKeyDown(_event: KeyboardEvent) {\n        if ((isSpaceKey(_event)) || isEnterKey(_event)) {\n            this.handleMenuItemsClick(_event);\n        }\n    }\n\n    /**\n     * Open the menu if it is closed and closed the menu if it is already opened\n     * @param _event the keyboard event\n     * @private\n     */\n    private handleMenuKeyDown(_event: KeyboardEvent) {\n        if ((isSpaceKey(_event)) || isEnterKey(_event)) {\n            this.menuOpen = !this.menuOpen;\n        }\n    }\n\n    private handleMenuItemsClick(evt: UIEvent) {\n        if ((evt.target as HTMLElement).tagName === 'A') {\n            this.close();\n            this.wcsClickOnFinalAction.emit();\n        }\n    }\n\n    /**\n     * handle category item click to close the submenu\n     * @param _\n     * @private\n     */\n    @Listen('wcsCategoryItemClicked')\n    // @ts-ignore\n    private wcsCategoryItemClickedHandler(_: CustomEvent<UIEvent>) {\n        // If a category item is clicked, we close the submenu drawer;\n        this.close();\n    }\n\n\n    render(): any {\n        return (\n            <Host onClick={evt => this.onClick(evt)}>\n                <div tabindex={screen.width < 576 ? \"-1\" : \"0\"}\n                     onClick={_ => this.menuOpen = !this.menuOpen}\n                     onKeyDown={evt => this.handleMenuKeyDown(evt)}\n                     class=\"menu-button\">\n                    <span class=\"label\">{this.label}</span><span class=\"arrow-container\"><span\n                    class=\"arrow-icon\" data-open={this.menuOpen}>&#xf107;</span></span>\n                </div>\n                <div class=\"drawer\" data-open={this.menuOpen} tabIndex={-1}>\n                    <div class=\"drawer-container\">\n                        <div class=\"drawer-content\">\n                            <div class=\"drawer-description\">\n                                <h3>{this.panelTitle}</h3>\n                                <p>{this.panelDescription}</p>\n                            </div>\n                            <div class=\"menu-items\"\n                                 onClick={(evt) => this.handleMenuItemsClick(evt)}\n                                 onKeyDown={evt => this.handleMenuItemsKeyDown(evt)}>\n                                <slot/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n\n}\n"],"version":3}