{"file":"wcs-radio.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,QAAQ,GAAG,qpFAAqpF;;MCUzpF,KAAK;;;;IACN,YAAO,GAAG,UAAU,cAAc,EAAE,EAAE,CAAC;gBAGiB,OAAO;;;mBAOvB,KAAK;oBAIjB,KAAK;;EAKzC,SAAS,CAAC,MAAqB;IAC3B,IAAI,CAACA,kBAAU,CAAC,MAAM,CAAC,IAAIC,kBAAU,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE;MAChE,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;MACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC/B;GACJ;EAED,iBAAiB;IACb,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;;MAE1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,IAAI,EAAE,CAAC;KACxC;GACJ;EAED,gBAAgB;IACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACzD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;MACrC,IAAI,CAAC,oBAAoB,EAAE,CAAC;MAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB,CAAC,CAAA;GACL;EAED,oBAAoB;IAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;MACpB,KAAK,EAAE,IAAI,CAAC,KAAK;MACjB,MAAM,EAAE,IAAI,CAAC,EAAE;MACf,KAAK,EAAE,IAAI,CAAC,KAAK;KACpB,CAAC,CAAC;GACN;EAED,MAAM;IACF,QACIC,QAACC,UAAI,IAAC,IAAI,EAAC,QAAQ,IACfD,mBACI,EAAE,EAAE,IAAI,CAAC,OAAO,EAChB,IAAI,EAAC,OAAO,EACZ,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ,mBACR,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,IAAI,kBAC9B,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,EACtCA,mBAAO,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,IAAG,IAAI,CAAC,KAAK,CAAS,CACpD,EACT;GACL;;;AAGL,IAAI,cAAc,GAAG,CAAC,CAAC;;;;;","names":["isSpaceKey","isEnterKey","h","Host"],"sources":["./src/components/radio/radio.scss?tag=wcs-radio&encapsulation=shadow","./src/components/radio/radio.component.tsx"],"sourcesContent":["@import '../../style/focus-outline.scss';\n\n:host {\n    width: fit-content;\n}\n\n:host([mode=radio]:focus-within) {\n    transition: none;\n    @include focus-outline($border-radius: 0.5rem, $outline-offset: 0);\n}\n\n:host([mode=horizontal]:focus-within) {\n    transition: none;\n    @include focus-outline($border-radius: 0.5rem, $outline-offset: 2px);\n}\n\n:host([mode=radio]),\n:host([mode=horizontal]) {\n    input {\n        position: absolute;\n        opacity: 0;\n        height: 1px;\n        width: 1px;\n        overflow: hidden;\n        clip-path: inset(50%);\n        white-space: nowrap;\n    }\n\n    label {\n        margin-bottom: 0;\n        color: var(--wcs-text-medium);\n        background-color: transparent;\n        font-weight: 500 !important;\n        display: inline-block;\n\n        &:before {\n            border-radius: 50%;\n            border: 2px solid var(--wcs-text-disabled);\n            position: relative;\n            width: 1.125rem;\n            height: 1.125rem;\n            pointer-events: none;\n            content: \"\";\n            background-color: var(--wcs-white);\n        }\n\n        &:after {\n            transition: 0.175s ease-in-out;\n            position: relative;\n            width: 1.125rem;\n            height: 1.125rem;\n            content: \"\";\n            background: no-repeat 50% / 50% 50%;\n        }\n    }\n}\n\n:host([disabled]) {\n    label {\n        color: var(--wcs-text-disabled);\n        cursor: not-allowed;\n    }\n}\n\n:host(:not([disabled])) {\n    label {\n        cursor: pointer;\n    }\n}\n\n:host([mode=radio][checked]),\n:host([mode=horizontal][checked]) {\n    label {\n        color: var(--wcs-primary);\n\n        &:before {\n            border-color: var(--wcs-primary);\n            background-color: var(--wcs-primary);\n        }\n    }\n}\n\n:host([mode=radio]:hover):not([disabled]),\n:host([mode=horizontal]:hover):not([disabled]) {\n    label {\n        color: var(--wcs-primary);\n\n        &:before {\n            border-color: var(--wcs-primary);\n        }\n    }\n}\n\n:host([mode=radio]) {\n    label {\n        padding: 0.125rem 0.125rem 0 0;\n        border: none;\n        transition: 0.175s ease-in-out;\n\n        &:before {\n            transition: 0.175s ease-in-out;\n            margin-right: var(--wcs-base-margin);\n            display: inline-block;\n            top: 3px;\n            box-sizing: border-box;\n        }\n    }\n}\n\n:host([mode=horizontal]) {\n    label {\n        &:before {\n            transition: background-color 0.175s ease-in-out;\n            margin: auto auto var(--wcs-base-margin);\n            display: block;\n\n        }\n    }\n}\n\n:host([mode=option]) {\n    padding: var(--wcs-base-margin) calc(var(--wcs-base-margin) / 2);\n    font-weight: 500 !important;\n\n    input {\n        position: absolute;\n        z-index: -1;\n        opacity: 0;\n        box-sizing: border-box;\n        padding: 0;\n    }\n\n    label {\n        padding: 5px calc(2 * var(--wcs-base-margin));\n        margin-bottom: 0;\n        color: var(--wcs-white);\n        white-space: nowrap;\n        border-radius: 0.4375rem;\n    }\n}\n\n:host([mode=option]:focus-within) {\n    label {\n        @include focus-outline(var(--wcs-white), 0.4375rem, 0.1rem);\n    }\n}\n\n:host([mode=option][checked]) {\n    label {\n        font-weight: 500 !important;\n        color: var(--wcs-primary);\n        background-color: var(--wcs-white);\n    }\n}\n","import { Component, ComponentInterface, h, Host, Prop, Element, Event, EventEmitter, Listen } from '@stencil/core';\nimport { RadioChosedEvent } from './radio-interface';\nimport { RadioGroupMode } from '../radio-group/radio-group-interface';\nimport { isEnterKey, isSpaceKey } from '../../utils/helpers';\n\n@Component({\n    tag: 'wcs-radio',\n    styleUrl: 'radio.scss',\n    shadow: true\n})\nexport class Radio implements ComponentInterface {\n    private inputId = `wcs-rb-${radioButtonIds++}`;\n    private inputEl: HTMLInputElement;\n    @Element() private el!: HTMLWcsRadioElement;\n    @Prop({ reflect: true, mutable: false }) mode: RadioGroupMode = 'radio';\n\n    @Prop({ mutable: true, reflect: true }) value: any | any[] | undefined | null;\n    @Prop({ mutable: true, reflect: true }) label: string;\n    /**\n     * If `true`, the radio is selected.\n     */\n    @Prop({mutable: true, reflect: true}) checked = false;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n    @Prop({ mutable: true }) disabled = false;\n    // FIXME renommer l'évènement c'est pas un onclick mais un onchange\n    @Event({eventName: 'wcsRadioClick' }) wcsRadioClick: EventEmitter<RadioChosedEvent>\n\n    @Listen('keydown')\n    onKeyDown(_event: KeyboardEvent) {\n        if ((isSpaceKey(_event) || isEnterKey(_event)) && !this.el.checked) {\n            this.el.checked = true;\n            this.emitRadioChangeEvent();\n        }\n    }\n\n    componentWillLoad(): Promise<void> | void {\n        if (this.value === undefined) {\n            // If no value was given we use the text content instead.\n            this.value = this.el.innerText || '';\n        }\n    }\n\n    componentDidLoad() {\n        this.inputEl = this.el.shadowRoot.querySelector('input');\n        this.inputEl.addEventListener('change', _ => {\n            this.emitRadioChangeEvent();\n            this.checked = true;\n        })\n    }\n\n    emitRadioChangeEvent() {\n        this.wcsRadioClick.emit({\n            label: this.label,\n            source: this.el,\n            value: this.value\n        });\n    }\n\n    render() {\n        return (\n            <Host slot=\"option\">\n                <input\n                    id={this.inputId}\n                    type=\"radio\"\n                    value={this.value}\n                    checked={this.checked}\n                    disabled={this.disabled}\n                    aria-disabled={this.disabled ? 'true' : null}\n                    aria-checked={`${this.checked}`}/>\n                <label htmlFor={`${this.inputId}`}>{this.label}</label>\n            </Host>\n        );\n    }\n}\n\nlet radioButtonIds = 0;\n"],"version":3}